## This Workflow just will run in mobin-2008/dinit instead of main repo for some reasons
## or when a PR labed with "meson".
# WIP!
# FIXME: paths must include Makefiles and related things to avoid meson CI for make only changes.
# FIXME: Also it's need to run on master repo when PR has "meson" label.

name: Dinit Meson based CI

on:
  push:
    branches:
      - meson_ci_in_github #FIXME
    paths:
      - '**'
      - '!.*'
      - '!README.md'
      - '!NEWS'
      - '!BUILD*'
      - '!CONTRIBUTORS'
      - '!TODO'
      - '!LICENSE'
      - '!build/includes/README'
      - '!doc/CODE-STYLE'
      - '!doc/COMPARISON'
      - '!doc/CONTRIBUTING'
      - '!doc/DESIGN'
      - '!doc/getting_started.md'
      - '!doc/manpages/README'
      - '!doc/manpages/generate-html.sh'
      - '!doc/manpages/DINIT-AS-INIT.md'
      - '!doc/linux/**'
  pull_request:
    branches:
      - master
    paths:
      - '**'
      - '!.*'
      - '!README.md'
      - '!NEWS'
      - '!BUILD*'
      - '!CONTRIBUTORS'
      - '!TODO'
      - '!LICENSE'
      - '!build/includes/README'
      - '!doc/CODE-STYLE'
      - '!doc/COMPARISON'
      - '!doc/CONTRIBUTING'
      - '!doc/DESIGN'
      - '!doc/getting_started.md'
      - '!doc/manpages/README'
      - '!doc/manpages/generate-html.sh'
      - '!doc/manpages/DINIT-AS-INIT.md'
      - '!doc/linux/**'
  workflow_dispatch:

jobs:

  Debian-bullseye_build:

    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    strategy:
      matrix:
        include:
          - arch: 'amd64'
          - arch: 'i386'
    if: ${{ github.repository == !'mobin-2008/dinit' }}

    steps:
    - uses: actions/checkout@v3
      if: ${{ github.repository == 'mobin-2008/dinit' }}
    - name: Add i386 repos
      if: ${{ matrix.arch == 'i386' && !github.repository == 'mobin-2008/dinit' }}
      run: dpkg --add-architecture i386
    - name: Getting depends (amd64)
      if: ${{ matrix.arch == 'amd64' && !github.repository == 'mobin-2008/dinit' }}
      run: |
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install g++ meson m4 -y
    - name: Getting depends (i386)
      if: ${{ matrix.arch == 'i386' && !github.repository == 'mobin-2008/dinit' }}
      run: |
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install g++:i386 meson m4:i386 g++:i386 -y
    - name: Setup
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson setup -Dunit-tests=true -Digr-tests=true dirbuild
    - name: Build
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson compile -C dirbuild
    - name: Unit tests
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson test -v --suite=unit_tests -C dirbuild
    - name: Integration tests
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson test -v --suite=igr_tests -C dirbuild

  MacOS-latest_build:

    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - arch: 'amd64'
    if: ${{ github.repository == 'mobin-2008/dinit' }}

    steps:
    - uses: actions/checkout@v3
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
    - name: Install meson via pip3
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: pip3 install meson
    - name: Install ninja
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: brew install ninja
    - name: Setup
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson setup -Dunit-tests=true -Digr-tests=true dirbuild
    - name: Build
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson compile -C dirbuild
    - name: Unit tests
      if: ${{ github.repository == 'mobin-2008/dinit' }}
      run: meson test -v --suite=unit_tests -C dirbuild
    - name: Integration tests
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      run: meson test -v --suite=igr_tests -C dirbuild

  Alpine-latest_build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: 'armv6'
          - arch: 'armv7'
          - arch: 'aarch64'
    if: ${{ github.repository == 'mobin-2008/dinit' }}

    steps:
    - uses: actions/checkout@v3
    - uses: uraimo/run-on-arch-action@v2.5.0
      name: Getting depends & setup & build & unit & integration tests
      if: ${{ !github.repository == 'mobin-2008/dinit' }}
      with:
        arch: ${{ matrix.arch }}
        distro: alpine_latest
        run: |
          apk add ncurses
          echo "$(tput bold) !---- ${{ matrix.arch }} BUILD ----!$(tput sgr0)"
          echo "$(tput bold) ----Getting depends---- :$(tput sgr0) apk update && apk add meson g++ m4"
          apk update
          apk add meson g++ m4
          echo "$(tput bold) ----Setup---- :$(tput sgr0) meson setup -Dunit-tests=true -Digr-tests=true dirbuild"
          meson setup -Dunit-tests=true -Digr-tests=true dirbuild
          echo "$(tput bold) ----Build---- :$(tput sgr0) meson compile -C dirbuild"
          meson compile -C dirbuild
          echo "$(tput bold) ----Unit tests---- :$(tput sgr0) meson test -v --suite=unit_tests -C dirbuild"
          meson test -v --suite=unit_tests -C dirbuild
          echo "$(tput bold) ----Integration tests---- :$(tput sgr0) meson test -v --suite=igr_tests -C dirbuild"
          meson test -v --suite=igr_tests -C dirbuild
